{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "My stack for launchpad instance WebServer",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Resources": {
    "WebServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Grants access to WebServer",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"},
          {"IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": "0.0.0.0/0"},
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": {"Ref": "SSHLocation"}}
        ],
        "Tags": [
          {"Key": "Name", "Value": "WebServerSecurityGroup"},
          {"Key": "Cost center", "Value": "Marketing"},
          {"Key": "Environment", "Value": "Testing"}
        ]
      }
    },
    "WebServerEC2Instance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": ["WebServerSecurityGroup"],
      "Properties": {
        "ImageId": "ami-f90a4880",
        "InstanceType": "t2.micro",
        "SecurityGroupIds": [
          {"Fn::GetAtt": ["WebServerSecurityGroup", "GroupId"]}
        ],
        "Tags": [
          {"Key": "Name", "Value": "WebServerEC2Instance"},
          {"Key": "Cost center","Value": "Marketing"},
          {"Key": "Environment","Value": "Testing"}
        ],
        "BlockDeviceMappings": [
          {"DeviceName": "/dev/sda1",
            "Ebs": {"DeleteOnTermination": "true", "VolumeSize": "10", "VolumeType": "gp2"}}
        ],
        "KeyName": {"Ref": "KeyName"},
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["",
              [
                "#! /bin/bash -ex\n",
                "# This script is for Ubuntu\n",
                "sudo apt-get update\n",
                "sudo apt-get -y install apache2\n",
                "sudo systemctl enable apache2\n",
                "sudo systemctl start apache2\n",
                "sudo apt-get -y install mysql-client php7.0-mysql php7.0-curl php7.0-cgi php7.0 libapache2-mod-php7.0 php-xml php7.0-zip\n",
                "sudo rm /var/www/html/index.html\n",
                "sudo cat <<\\EOF >>/var/www/html/index.php\n",
                "<?php\n $this_instance_id = file_get_contents('http://169.254.169.254/latest/meta-data/instance-id');\n",
                "if(!empty($this_instance_id))\n",
                "    echo (string)($this_instance_id);\n",
                "else\n",
                "    echo \"Sorry, instance id unknown\";\n",
                "EOF\n",
                "usermod -a -G www-data ubuntu\n",
                "chown -R root:www-data /var/www\n",
                "chmod 2775 /var/www\n",
                "find /var/www -type d -exec chmod 2775 {} +\n",
                "find /var/www/ -type f -exec chmod 0664 {} +\n"
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "WebServerURL": {
      "Value": {"Fn::Join": ["", ["http://", {"Fn::GetAtt": ["WebServerEC2Instance","PublicIp"]}, "/"]]
      },
      "Description": "WebServer public URL"
    }
  }
}